SET SERVEROUTPUT ON;

DECLARE
    CURSOR PROD_CURSOR IS
        SELECT DESC_REPORT,  APPROVED FROM T_OP_SR_REPORT WHERE APPROVED = 1;
    ROWP PROD_CURSOR%ROWTYPE;
    ROWS_FOUND NUMBER := 0;
BEGIN
    OPEN PROD_CURSOR();
    DBMS_OUTPUT.PUT_LINE('Aprovados:');
    LOOP
        FETCH PROD_CURSOR INTO ROWP;
        EXIT WHEN PROD_CURSOR%NOTFOUND;
        ROWS_FOUND := ROWS_FOUND + 1;
        DBMS_OUTPUT.PUT_LINE(ROWS_FOUND || ' - Descrição: ' || ROWP.DESC_REPORT);
        
    END LOOP;
    IF ROWS_FOUND = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Nenhum aprovado');
    END IF;
    CLOSE PROD_CURSOR;
END;

DECLARE
    CURSOR PROD_CURSOR IS
        SELECT USER_NAME, XP FROM T_OP_SR_USER WHERE XP > 0 ORDER BY XP DESC;
    ROWP PROD_CURSOR%ROWTYPE;
    ROWS_FOUND NUMBER := 0;
BEGIN
    OPEN PROD_CURSOR();
    DBMS_OUTPUT.PUT_LINE('RANK DOS MAIORES NÍVEIS:');
    LOOP
        FETCH PROD_CURSOR INTO ROWP;
        EXIT WHEN PROD_CURSOR%NOTFOUND;
        ROWS_FOUND := ROWS_FOUND + 1;
        DBMS_OUTPUT.PUT_LINE(ROWS_FOUND || ' - NOME: ' || ROWP.USER_NAME || ' - XP: ' || ROWP.XP);
        
    END LOOP;
    IF ROWS_FOUND = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Nenhum usuario com xp maior que 0');
    END IF;
    CLOSE PROD_CURSOR;
END;


DECLARE
    CURSOR PROD_CURSOR IS
    SELECT DISTINCT
        COUNT(LIKES.ID_POST) AS QTDLIKES,
        POST.CONTENT_POST
    FROM
             T_OP_SR_POST POST
        INNER JOIN T_OP_SR_LIKES LIKES ON POST.ID_POST = LIKES.ID_POST
    GROUP BY
        POST.ID_POST,
        POST.CONTENT_POST
    ORDER BY
        QTDLIKES DESC;

    ROWP       PROD_CURSOR%ROWTYPE;
    ROWS_FOUND NUMBER := 0;
BEGIN
    OPEN PROD_CURSOR();
    DBMS_OUTPUT.PUT_LINE('RANK POSTS COM MAIS LIKES:');
    LOOP
        FETCH PROD_CURSOR INTO ROWP;
        EXIT WHEN PROD_CURSOR%NOTFOUND;
        ROWS_FOUND := ROWS_FOUND + 1;
        DBMS_OUTPUT.PUT_LINE(ROWS_FOUND
                             || ' - CONTEUDO: '
                             || ROWP.CONTENT_POST
                             || ' - LIKES: '
                             || ROWP.QTDLIKES);

    END LOOP;

    IF ROWS_FOUND = 0 THEN
        DBMS_OUTPUT.PUT_LINE('NENHUM ENCONTRADO');
    END IF;
    CLOSE PROD_CURSOR;
END;

DECLARE
    CURSOR PROD_CURSOR IS
    SELECT DISTINCT
        COUNT(LIKES.ID_USER) AS QTDLIKES,
        USUARIO.USER_NAME
    FROM
             T_OP_SR_USER USUARIO
        INNER JOIN T_OP_SR_LIKES LIKES ON USUARIO.ID_USER = LIKES.ID_USER
    GROUP BY
        USUARIO.ID_USER,
        USUARIO.USER_NAME
    ORDER BY
        QTDLIKES DESC;

    ROWP       PROD_CURSOR%ROWTYPE;
    ROWS_FOUND NUMBER := 0;
BEGIN
    OPEN PROD_CURSOR();
    DBMS_OUTPUT.PUT_LINE('RANK USUARIOS QUE MAIS CURTIRAM:');
    LOOP
        FETCH PROD_CURSOR INTO ROWP;
        EXIT WHEN PROD_CURSOR%NOTFOUND;
        ROWS_FOUND := ROWS_FOUND + 1;
        DBMS_OUTPUT.PUT_LINE(ROWS_FOUND
                             || ' - Usuario: '
                             || ROWP.USER_NAME
                             || ' - LIKES: '
                             || ROWP.QTDLIKES);

    END LOOP;

    IF ROWS_FOUND = 0 THEN
        DBMS_OUTPUT.PUT_LINE('NENHUM ENCONTRADO');
    END IF;
    CLOSE PROD_CURSOR;
END;